import React, { useEffect, useState } from 'react';
import { db } from '../firebaseConfig';
import { collection, addDoc, getDocs, query, where } from 'firebase/firestore';
import { useAuth } from '../context/AuthContext';

const ApartmentReviews = ({ apartmentId }) => {
    const { user } = useAuth();
    const [reviews, setReviews] = useState([]);
    const [text, setText] = useState('');

    // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –≤—ñ–¥–≥—É–∫—ñ–≤ –∑ Firestore
    const fetchReviews = async () => {
        try {
            const q = query(collection(db, 'reviews'), where('apartmentId', '==', apartmentId));
            const snapshot = await getDocs(q);
            const data = snapshot.docs.map(doc => doc.data());
            setReviews(data);
        } catch (error) {
            console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ –≤—ñ–¥–≥—É–∫—ñ–≤:', error);
        }
    };

    // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –Ω–æ–≤–æ–≥–æ –≤—ñ–¥–≥—É–∫—É –¥–æ Firestore
    const submitReview = async () => {
        if (!text.trim() || !user) return;
        try {
            await addDoc(collection(db, 'reviews'), {
                Review: text,
                Gmail: user.email,
                apartmentId,
                createdAt: new Date().toISOString()
            });
            setText('');
            fetchReviews(); // –û–Ω–æ–≤–∏—Ç–∏ —Å–ø–∏—Å–æ–∫ –≤—ñ–¥–≥—É–∫—ñ–≤ –ø—ñ—Å–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –Ω–æ–≤–æ–≥–æ
        } catch (error) {
            console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –¥–æ–¥–∞–≤–∞–Ω–Ω—ñ –≤—ñ–¥–≥—É–∫—É:', error);
        }
    };

    // –í–∏–∫–ª–∏–∫ fetchReviews –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –∞–±–æ –∑–º—ñ–Ω—ñ apartmentId
    useEffect(() => {
        if (user) {
            fetchReviews();
        }
    }, [user, apartmentId]);

    return (
        <div style={{ marginTop: '30px' }}>
            <h3>–í—ñ–¥–≥—É–∫–∏</h3>
            {user ? (
                <>
                    {reviews.map((r, i) => (
                        <div key={i} style={{ marginBottom: '10px' }}>
                            <strong>{r.Gmail}</strong>: {r.Review}
                        </div>
                    ))}
                    <textarea
                        placeholder="–í–∞—à –≤—ñ–¥–≥—É–∫..."
                        value={text}
                        onChange={e => setText(e.target.value)}
                        rows="3"
                        style={{ width: '100%', marginTop: '10px' }}
                    />
                    <button onClick={submitReview}>–ó–∞–ª–∏—à–∏—Ç–∏ –≤—ñ–¥–≥—É–∫</button>
                </>
            ) : (
                <p>üîê –£–≤—ñ–π–¥—ñ—Ç—å, —â–æ–± –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ —Ç–∞ –∑–∞–ª–∏—à–∏—Ç–∏ –≤—ñ–¥–≥—É–∫</p>
            )}
        </div>
    );
};

export default ApartmentReviews;
